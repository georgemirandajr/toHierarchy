shiny::runApp()
?fread
library(data.table)
?fread
indexing <- fread("./demodash/data/indexing.csv", header = "auto", stringsAsFactors = TRUE)
indexing <- fread("./demodash/data/indexing.csv", sep = "auto", header = "auto", stringsAsFactors = TRUE)
indexing <- fread("./data/indexing.csv", sep = "auto", header = "auto", stringsAsFactors = TRUE)
View(indexing)
library(ggplot2)
?qplot
?as.Date
?strptime
indexing$date <- as.Date(indexing$date, format = "%m/%d/%Y")
View(indexing)
indexing$date <- strptime(indexing$date, format = "%m/%d/%Y")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?qplot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
a <- which.max(names()$docs)
?which.max
shiny::runApp()
shiny::runApp()
a<- indexing$date[which.max(indexing$docs)]
b<- indexing$docs[which.max(indexing$docs)]
shiny::runApp()
shiny::runApp()
?ggplot2
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD)) + scale_color_gradient(low = "red")
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD)) + scale_color_gradient(low = "red") +
aes(main = "Average Rate Per Hour", xlab = "Date", ylab = "Rate Per Hour") +
theme_bw()
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD), main = "Average Rate Per Hour", xlab = "Date", ylab = "Rate Per Hour") +
scale_color_gradient(low = "red") +
theme_bw()
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD, main = "Average Rate Per Hour", xlab = "Date", ylab = "Rate Per Hour")) +
scale_color_gradient(low = "red") +
theme_bw()
g <- ggplot(indexing, aes(date, ratePH, main = "Average Rate Per Hour", xlab = "Date", ylab = "Rate Per Hour"))
g + geom_line(aes(color = namesPD)) +
scale_color_gradient(low = "red") +
theme_bw()
g <- ggplot(indexing, aes(date, ratePH), main = "Average Rate Per Hour", xlab = "Date", ylab = "Rate Per Hour")
g + geom_line(aes(color = namesPD)) +
scale_color_gradient(low = "red") +
theme_bw()
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD)) +
scale_color_gradient(low = "red") +
labs(title = "Average Rate Per Hour", x = "Date", y = "Rate Per Hour")
theme_bw()
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD)) +
scale_color_gradient(low = "red") +
labs(title = "Average Rate Per Hour", x = "Date", y = "Rate Per Hour", color = "Names Per Doc")
theme_bw()
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD)) +
scale_color_gradient(low = "red") +
labs(title = "Average Rate Per Hour", x = "Date", y = "Rate Per Hour", color = "Names Per Doc") +
theme_bw()
shiny::runApp()
shiny::runApp()
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD)) +
scale_color_gradient(low = "red") +
labs(title = "Average Rate Per Hour", x = "Date", y = "Rate Per Hour", color = "Names Per Doc") +
theme_bw()
g <- ggplot(indexing, aes(date, ratePH))
g + geom_line(aes(color = namesPD)) +
scale_color_gradient(low = "blue") +
labs(title = "Average Rate Per Hour", x = "Date", y = "Rate Per Hour", color = "Names Per Doc") +
theme_bw()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(data.table)
library(ggplot2)
indexing <- fread("./data/indexing.csv", sep = "auto", header = "auto", stringsAsFactors = TRUE)
indexing$date <- as.Date(indexing$date, format = "%m/%d/%Y")
E01 <- subset(indexing, emp == "E01")
mo <- strftime(E01$date, "%m")
yr <- strftime(E01$date, "%Y")
E01 <- cbind(E01, mo, yr)
View(`E01`)
View(indexing)
indexing <- cbind(indexing, mo, yr)
View(indexing)
E01 <- cbind(E01, mo, yr)
View(`E01`)
a <- aggregate(ratePH ~ mo + yr, data = E01, FUN = mean)
View(a)
shiny::runApp()
shiny::runApp()
indexing <- fread("./data/indexing.csv", sep = "auto", header = "auto", stringsAsFactors = TRUE)
indexing$date <- as.Date(indexing$date, format = "%m/%d/%Y")
mo <- strftime(indexing$date, "%m")
yr <- strftime(indexing$date, "%Y")
indexing <- cbind(indexing, mo, yr)
View(indexing)
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(data.table)
library(ggplot2)
indexing <- fread("./data/indexing.csv", sep = "auto", header = "auto", stringsAsFactors = TRUE)
indexing$date <- as.Date(indexing$date, format = "%m/%d/%Y")
mo <- strftime(E01$date, "%m")
yr <- strftime(E01$date, "%Y")
E01 <- cbind(E01, mo, yr)
E01 <- subset(indexing, emp == "E01")
a <- aggregate(ratePH ~ mo + yr, data = E01, FUN = mean)
a$date <- as.POSIXct(paste(a$yr, a$mo, "01", sep = "-"))
View(a)
shiny::runApp()
install.packages("quantstrat")
?quantstrat
shiny::runApp()
library(dplyr)
require(dplyr)
?dplyr
?group
?dplyr
shiny::runApp()
library(data.table)
library(ggplot2)
indexing <- fread("./data/indexing.csv", sep = "auto", header = "auto", stringsAsFactors = TRUE)
indexing$date <- as.Date(indexing$date, format = "%m/%d/%Y")
View(indexing)
library("lubridate", lib.loc="~/R/win-library/3.1")
months <- month(indexing$date)
View(indexing)
indexing1 <- indexing
indexing1$date <- month(indexing1$date)
View(indexing1)
shiny::runApp()
mo <- strftime(E01$date, "%m")
yr <- strftime(E01$date, "%Y")
E01 <- cbind(E01, mo, yr)
mo <- strftime(indexing$date, "%m")
yr <- strftime(indexing$date, "%Y")
View(indexing)
d <- aggregate(indexing1$date, month, mean)
library("zoo", lib.loc="~/R/win-library/3.1")
d <- aggregate(indexing1$date, yearmon, mean)
d <- aggregate(date, yearmon, mean)
mo <- strftime(indexing$date, "%m")
yr <- strftime(indexing$date, "%Y")
indexing <- cbind(indexing, mo, yr)
View(indexing)
E01 <- subset(indexing, emp == "E01")
View(`E01`)
View(`E01`)
d <- group_by(E01, months())
?month
a <- aggregate(ratePH ~ mo + yr, data = E01, FUN = mean)
View(a)
a$date <- as.POSIXct(paste(a$yr, a$mo, "01", sep = "-"))
View(a)
View(a)
View(indexing)
View(a)
View(a)
?quant
shiny::runApp()
q <- quantile(indexing$ratePH)
Viewq
View(q)
mean(E01$ratePH)
a <- aggregate(cbind(ratePH, namesPD) ~ mo + yr, data = E01, FUN = mean)
View(a)
a$date <- as.POSIXct(paste(a$yr, a$mo, "01", sep = "-"))
View(`E01`)
a <- aggregate(cbind(ratePH, namesPD) ~ mo + yr, data = E01, FUN = mean)
View(a)
a$date <- as.POSIXct(paste(a$yr, a$mo, "01", sep = "-"))
View(a)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(a)
?Observer
?observer
shiny::runApp()
library(data.table)
library(ggplot2)
indexing <- fread("./data/indexing.csv", sep = "auto", header = "auto", stringsAsFactors = TRUE)
indexing$date <- as.Date(indexing$date, format = "%m/%d/%Y")
indexing$mo <- strftime(indexing$date, "%m")
indexing$yr <- strftime(indexing$date, "%Y")
a <- aggregate(cbind(ratePH, namesPD) ~ mo + yr, data = indexing, FUN = mean)
a$date <- as.POSIXct(paste(a$yr, a$mo, "01", sep = "-"))
View(a)
a <- aggregate(cbind(ratePH, namesPD) ~ mo + yr + emp, data = indexing, FUN = mean)
a$date <- as.POSIXct(paste(a$yr, a$mo, "01", sep = "-"))
View(a)
shiny::runApp()
shiny::runApp()
shiny::runApp()
?round
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?mean
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?validate
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
indexing <- fread("./data/indexing.csv", sep = "auto", header = "auto", stringsAsFactors = TRUE)
indexing$date <- as.Date(indexing$date, format = "%m/%d/%Y")
indexing$mo <- strftime(indexing$date, "%m")
indexing$yr <- strftime(indexing$date, "%Y")
View(indexing)
monthlyavg <- aggregate(cbind(ratePH, namesPD) ~ mo + yr + emp, data = indexing, FUN = mean)
monthlyavg$date <- as.POSIXct(paste(monthlyavg$yr, monthlyavg$mo, "01", sep = "-"))
View(monthlyavg)
monthlyavg %>%
ggvis(x = ~date, y = ~ratePH) %>%
layer_points()
shiny::runApp()
shiny::runApp()
?actionButton
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?knit2pdf
library(knit)
library(knitr)
?knit2pdf
shiny::runApp()
shiny::runApp()
?downloadHandler
shiny::runApp()
shiny::runApp()
shiny::runApp()
?write.csv
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?renderTable
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(monthlyavg)
View(indexing)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
